Overall
 ! Add Tests
 ! Add routing
 ! Add default on permission denied error msg
 ! update generated login form to include flash error and flash notice

 ? Can there be different login controllers/models for different parts
   of the site?

Controller
 * Update how restrict_to works so that it can be ignored in subclasses
 * Before/after login callbacks?

Model
 * validate user.group_id
 * Allow custom validation msg for group and priv validations
 * allow configuration of username, password_hash, and salt column names?
 * Revisit mixin for group/priv/group_priv

Ideas
 * Preferences system
 * Object level privileges
 * Syntax for asking for permission a & b (not just or)
 * Users can belong to many groups
 * Signup/forgot password/activation system

http://svn.techno-weenie.net/projects/plugins/restful_authentication/
http://svn.techno-weenie.net/projects/plugins/acts_as_authenticated/
http://www.mathewabonyi.com/articles/2006/07/29/authenticated-cookie-safe-fast

http://svn.rails-engines.org/plugins/login_engine/
http://svn.rails-engines.org/plugins/user_engine/

http://agilewebdevelopment.com/plugins/scoped_access

Others:
  http://agilewebdevelopment.com/plugins/simple_access_control
    uses "admin || manager" style syntax
    adds has_permission? helper on view

  http://opensvn.csie.org/ezra/rails/plugins/dev/acl_system2/
    uses "admin || manager" style syntax
    adds has_permission? helper on view
    
  http://activeacl.rubyforge.org/
    has object level permissions
    you can explicitely deny users privileges (not sure if i like this)
    seems very complex, and the API does not seem very easy